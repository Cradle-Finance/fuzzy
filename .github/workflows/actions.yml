on: [pull_request, push]

name: CI

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Clone repository
  #     uses: actions/checkout@master
  #   - name: Run tests
  #     uses: comigor/actions/dart-test@master
  check-version:
    # needs: test
    runs-on: ubuntu-latest
    container: golang
    steps:
    - name: Clone repository
      uses: actions/checkout@master
    - name: Check if version was changed and changelog updated
      run: |
        echo "----------------install"
        go get -u github.com/itchyny/gojq/cmd/gojq

        cd "$GITHUB_WORKSPACE"
        
        echo "----------------event"
        echo "$GITHUB_EVENT_PATH"
        cat "$GITHUB_EVENT_PATH" | gojq .

        echo "----------------git"
        if test "${{ github.ref }}" = "master"; then
          git diff HEAD~$(gojq '.commits | length' "${GITHUB_EVENT_PATH}") pubspec.yaml
        else
          git diff refs/heads/master pubspec.yaml || true
          git diff origin/master pubspec.yaml || true
          git diff master pubspec.yaml || true
        fi
        echo oooooooooooooook
        git rev-parse --abbrev-ref HEAD

        echo "----------------diff"
        git diff HEAD~$(gojq '.commits | length' "${GITHUB_EVENT_PATH}") pubspec.yaml

        echo "----------------version"
        package_version=$(cat pubspec.yaml | gojq --yaml-input -r '.version')
        echo "::set-env name=package_version::$package_version"
        echo "::warning::$package_version"
        echo "$package_version"

        echo "----------------changelog"
        cat CHANGELOG.md | grep $package_version
        exit 0
  deploy:
    needs: check-version
    runs-on: ubuntu-latest    
    if: contains(github.ref, 'master')
    steps:    
    - name: Clone repository
      uses: actions/checkout@master          
    - name: Publish to pub.dev
      uses: comigor/actions/pub-publish@master      
      env:
        PUB_CREDENTIALS: ${{ secrets.PUB_CREDENTIALS }}
